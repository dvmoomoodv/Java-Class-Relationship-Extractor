com.gsitm.ustra.java.cloud.gateway.UstraCloudGateway:
  class_annotations: []
  extends: null
  implements: []
  imports: []
  methods: {}
com.gsitm.ustra.java.cloud.gateway.config.GatewayFilterConfiguration:
  class_annotations:
  - Configuration
  extends: null
  implements: []
  imports:
  - org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean
  - org.springframework.boot.autoconfigure.condition.ConditionalOnProperty
  - org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory
  - org.springframework.context.annotation.Bean
  - org.springframework.context.annotation.Configuration
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.JwtTokenAddRequestHeaderGatewayFilterFactory
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.JwtTokenParseGatewayFilterFactory
  methods:
    jwtTokenAddRequestHeaderGatewayFilterFactory:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      - ConditionalOnProperty
      parameters:
      - annotations: []
        name: addRequestHeaderGatewayFilterFactory
        type: AddRequestHeaderGatewayFilterFactory
      return_type: JwtTokenAddRequestHeaderGatewayFilterFactory
    jwtTokenParseGatewayFilterFactory:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      - ConditionalOnProperty
      parameters: []
      return_type: JwtTokenParseGatewayFilterFactory
com.gsitm.ustra.java.cloud.gateway.config.GatewayRequestLimitFilterConfiguration:
  class_annotations:
  - Configuration
  - ConditionalOnProperty
  extends: null
  implements: []
  imports:
  - java.util.List
  - org.springframework.boot.autoconfigure.condition.ConditionalOnClass
  - org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean
  - org.springframework.boot.autoconfigure.condition.ConditionalOnProperty
  - org.springframework.context.annotation.Bean
  - org.springframework.context.annotation.Configuration
  - org.springframework.context.event.ContextRefreshedEvent
  - org.springframework.scheduling.annotation.SchedulingConfigurer
  - org.springframework.scheduling.config.ScheduledTaskRegistrar
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.RequestLimitGatewayFilterFactory
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.DefaultRequestLimitChecker
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.RequestLimitChecker
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.ManagementRequestLimitPolicyProvider
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyCollector
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyProvider
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyStore
  - com.gsitm.ustra.java.cloud.gateway.properties.UstraCloudGatewayProperties
  - com.gsitm.ustra.java.core.app.listener.OnceContextRefreshedEventApplicationListener
  - com.gsitm.ustra.java.data.UstraData
  methods:
    managementRequestLimitPolicyProvider:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      - ConditionalOnProperty
      - ConditionalOnClass
      parameters:
      - annotations: []
        name: properties
        type: UstraCloudGatewayProperties
      return_type: ManagementRequestLimitPolicyProvider
    requestLimitChecker:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      parameters:
      - annotations: []
        name: requestLimitPolicyStore
        type: RequestLimitPolicyStore
      return_type: RequestLimitChecker
    requestLimitGatewayFilterFactory:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      parameters: []
      return_type: RequestLimitGatewayFilterFactory
    requestLimitOnceContextRefreshedEventApplicationListener:
      annotations:
      - Bean
      parameters:
      - annotations: []
        name: requestLimitPolicyCollector
        type: RequestLimitPolicyCollector
      return_type: OnceContextRefreshedEventApplicationListener
    requestLimitPolicyCollector:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      parameters:
      - annotations: []
        name: store
        type: RequestLimitPolicyStore
      - annotations: []
        name: providers
        type: List
      return_type: RequestLimitPolicyCollector
    requestLimitPolicyStore:
      annotations:
      - Bean
      - ConditionalOnMissingBean
      parameters: []
      return_type: RequestLimitPolicyStore
com.gsitm.ustra.java.cloud.gateway.filter.factory.AbstractAddChannelCodeHeaderGatewayFilterFactory:
  class_annotations: []
  extends: AbstractGatewayFilterFactory
  implements: []
  imports:
  - org.apache.commons.lang3.StringUtils
  - org.springframework.cloud.gateway.filter.GatewayFilter
  - org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory
  - org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory.NameValueConfig
  - org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory
  - org.springframework.web.server.ServerWebExchange
  - lombok.Data
  methods:
    apply:
      annotations: []
      parameters:
      - annotations: []
        name: config
        type: C
      - annotations: []
        name: channelCodeValue
        type: String
      return_type: GatewayFilter
    getChannelCode:
      annotations: []
      parameters:
      - annotations: []
        name: exchange
        type: ServerWebExchange
      return_type: String
com.gsitm.ustra.java.cloud.gateway.filter.factory.AbstractJwtAuthenticationGatewayFilterFactory:
  class_annotations: []
  extends: AbstractGatewayFilterFactory
  implements: []
  imports:
  - java.util.Arrays
  - java.util.List
  - org.apache.commons.lang3.StringUtils
  - org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory
  - org.springframework.http.HttpCookie
  - org.springframework.web.server.ServerWebExchange
  - io.jsonwebtoken.Claims
  - io.jsonwebtoken.ExpiredJwtException
  - io.jsonwebtoken.Jwts
  - lombok.Data
  methods:
    getToken:
      annotations: []
      parameters:
      - annotations: []
        name: exchange
        type: ServerWebExchange
      - annotations: []
        name: config
        type: Config
      return_type: String
    parseClaim:
      annotations: []
      parameters:
      - annotations: []
        name: exchange
        type: ServerWebExchange
      - annotations: []
        name: config
        type: Config
      return_type: Claims
    shortcutFieldOrder:
      annotations:
      - Override
      parameters: []
      return_type: List
com.gsitm.ustra.java.cloud.gateway.filter.factory.JwtTokenAddRequestHeaderGatewayFilterFactory:
  class_annotations: []
  extends: AbstractAddChannelCodeHeaderGatewayFilterFactory
  implements:
  - Ordered
  imports:
  - java.util.function.Function
  - org.springframework.cloud.gateway.filter.GatewayFilter
  - org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory
  - org.springframework.core.Ordered
  - io.jsonwebtoken.Claims
  - lombok.Data
  - lombok.EqualsAndHashCode
  methods:
    apply:
      annotations:
      - Override
      parameters:
      - annotations: []
        name: config
        type: Config
      return_type: GatewayFilter
    getOrder:
      annotations:
      - Override
      parameters: []
      return_type: int
com.gsitm.ustra.java.cloud.gateway.filter.factory.JwtTokenParseGatewayFilterFactory:
  class_annotations: []
  extends: AbstractJwtAuthenticationGatewayFilterFactory
  implements:
  - Ordered
  imports:
  - org.springframework.cloud.gateway.filter.GatewayFilter
  - org.springframework.core.Ordered
  - io.jsonwebtoken.Claims
  methods:
    apply:
      annotations:
      - Override
      parameters:
      - annotations: []
        name: config
        type: Config
      return_type: GatewayFilter
    getOrder:
      annotations:
      - Override
      parameters: []
      return_type: int
com.gsitm.ustra.java.cloud.gateway.filter.factory.RequestLimitGatewayFilterFactory:
  class_annotations: []
  extends: AbstractGatewayFilterFactory
  implements: []
  imports:
  - org.apache.commons.lang3.StringUtils
  - org.springframework.cloud.gateway.filter.GatewayFilter
  - org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory
  - org.springframework.cloud.gateway.support.ServerWebExchangeUtils
  - org.springframework.http.HttpStatus
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.RequestLimitChecker
  - lombok.Data
  methods:
    apply:
      annotations:
      - Override
      parameters:
      - annotations: []
        name: config
        type: Config
      return_type: GatewayFilter
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.DefaultRequestLimitChecker:
  class_annotations:
  - Slf4j
  extends: null
  implements:
  - RequestLimitChecker
  imports:
  - java.time.LocalDateTime
  - java.time.format.DateTimeFormatter
  - java.util.concurrent.TimeUnit
  - java.util.concurrent.atomic.AtomicInteger
  - org.apache.commons.lang3.StringUtils
  - org.springframework.cache.concurrent.ConcurrentMapCache
  - org.springframework.web.server.ServerWebExchange
  - com.google.common.cache.CacheBuilder
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.AbstractAddChannelCodeHeaderGatewayFilterFactory
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicy
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyStore
  - com.gsitm.ustra.java.core.utils.data.BiValue
  - com.gsitm.ustra.web.core.utils.UstraWebCoreUtils
  - lombok.extern.slf4j.Slf4j
  methods:
    addAndCheckOverflow:
      annotations:
      - Override
      parameters:
      - annotations: []
        name: system
        type: String
      - annotations: []
        name: exchange
        type: ServerWebExchange
      return_type: boolean
    getPolicyAndLimitCount:
      annotations: []
      parameters:
      - annotations: []
        name: system
        type: String
      - annotations: []
        name: exchange
        type: ServerWebExchange
      return_type: BiValue
    getStorageKey:
      annotations: []
      parameters:
      - annotations: []
        name: policy
        type: RequestLimitPolicy
      - annotations: []
        name: channelCode
        type: String
      return_type: String
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.RequestLimitChecker:
  class_annotations: []
  extends: null
  implements: []
  imports:
  - org.springframework.web.server.ServerWebExchange
  methods:
    addAndCheckOverflow:
      annotations: []
      parameters:
      - annotations: []
        name: system
        type: String
      - annotations: []
        name: exchange
        type: ServerWebExchange
      return_type: boolean
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.ManagementRequestLimitPolicyProvider:
  class_annotations: []
  extends: UstraJdbcTemplateService
  implements:
  - RequestLimitPolicyProvider
  imports:
  - java.sql.ResultSet
  - java.sql.SQLException
  - java.util.ArrayList
  - java.util.List
  - java.util.stream.Stream
  - org.apache.commons.lang3.StringUtils
  - org.springframework.dao.DataAccessException
  - org.springframework.jdbc.core.ResultSetExtractor
  - org.springframework.jdbc.core.RowMapper
  - com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicy.ChannelPolicy
  - com.gsitm.ustra.java.cloud.gateway.properties.UstraCloudGatewayProperties
  - com.gsitm.ustra.java.data.utils.UstraJdbcTemplateService
  methods:
    provide:
      annotations:
      - Override
      parameters: []
      return_type: List
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicy:
  class_annotations:
  - Data
  extends: null
  implements: []
  imports:
  - java.util.List
  - lombok.Data
  methods: {}
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyCollector:
  class_annotations: []
  extends: null
  implements: []
  imports:
  - java.util.List
  - java.util.concurrent.TimeUnit
  - org.springframework.scheduling.Trigger
  - org.springframework.scheduling.support.PeriodicTrigger
  methods:
    collect:
      annotations: []
      parameters: []
      return_type: null
    reloadTrigger:
      annotations: []
      parameters: []
      return_type: Trigger
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyProvider:
  class_annotations: []
  extends: null
  implements: []
  imports:
  - java.util.List
  methods:
    provide:
      annotations: []
      parameters: []
      return_type: List
com.gsitm.ustra.java.cloud.gateway.filter.factory.limit.policy.RequestLimitPolicyStore:
  class_annotations: []
  extends: null
  implements: []
  imports:
  - java.util.List
  - java.util.Map
  - java.util.concurrent.ConcurrentHashMap
  - java.util.stream.Collectors
  - org.apache.commons.collections.CollectionUtils
  methods:
    addAll:
      annotations: []
      parameters:
      - annotations: []
        name: polices
        type: List
      return_type: null
    clear:
      annotations: []
      parameters: []
      return_type: null
    find:
      annotations: []
      parameters:
      - annotations: []
        name: system
        type: String
      - annotations: []
        name: channel
        type: String
      return_type: List
com.gsitm.ustra.java.cloud.gateway.properties.UstraCloudGatewayProperties:
  class_annotations:
  - Data
  - ConfigurationProperties
  extends: null
  implements: []
  imports:
  - org.springframework.boot.context.properties.ConfigurationProperties
  - lombok.Data
  methods: {}
